
Test 00:
Programming example 0 : Geometric algebra identities

framed_multi<float,-3,4>
All tests passed.

matrix_multi<float,-3,4>
All tests passed.

framed_multi<float,-4,4>
All tests passed.

matrix_multi<float,-4,4>
All tests passed.

framed_multi<float,-5,6>
All tests passed.

matrix_multi<float,-5,6>
All tests passed.

framed_multi<double>
All tests passed.

matrix_multi<double>
All tests passed.

framed_multi<long double>
All tests passed.

matrix_multi<long double>
All tests passed.

framed_multi<dd_real>
All tests passed.

matrix_multi<dd_real>
All tests passed.

framed_multi<qd_real>
All tests passed.

matrix_multi<qd_real>
All tests passed.

Test 01:
Programming example 1 : 2D lengths and areas

Let OPQ be a triangle, where P=(4,3), Q=(2,3) and O is the origin (0,0).
Calculate the length r of side OP and the area A of the triangle.
framed_multi<double>


OP = 4{1}+3{2}
OQ = 2{1}+3{2}
length of side OP = 5
area of triangle OPQ = 3
matrix_multi<double>

OP = 4{1}+3{2}
OQ = 2{1}+3{2}
length of side OP = 5
area of triangle OPQ = 3

Test 02:
Programming example 2 : inner, outer and geometric products, contraction

Let a, b be elements in Cl(3,0) where
a = 2{1} + 3{2} + 3{3} and b = 3{1} + {2} + 4{3}.
Determine ab, a.b, a^b; Verify that ab == a.b + a^b.

framed_multi<double>
a =
  2{1}+3{2}+3{3}
b =
  3{1}+2{2}+4{3}
c =
  5+{1}+3{2,3}
a&b =
  24
a%b =
  24
a^b =
  -5{1,2}-{1,3}+6{2,3}
a*b =
  24-5{1,2}-{1,3}+6{2,3}
a&b + a^b =
  24-5{1,2}-{1,3}+6{2,3}
a%b + a^b =
  24-5{1,2}-{1,3}+6{2,3}

matrix_multi<double>
a =
  2{1}+3{2}+3{3}
b =
  3{1}+2{2}+4{3}
c =
  5+{1}+3{2,3}
a&b =
  24
a%b =
  24
a^b =
  -5{1,2}-{1,3}+6{2,3}
a*b =
  24-5{1,2}-{1,3}+6{2,3}
a&b + a^b =
  24-5{1,2}-{1,3}+6{2,3}
a%b + a^b =
  24-5{1,2}-{1,3}+6{2,3}


Test 03:
Programming example 3 : Powers, output to file

In Cl_{2,1} let x = 2e1 + 6.2e2 - 4.1e23 and
                y = 7e1 - 2.1e2 + 9.6e12 + 6e23.
Compute 2x + 3y, x to the power 5, y to the outer power 3.
Find the even part of x*y and write the result to a file called eg3.res

framed_multi<double>
x = 
  2{1}+6.2{2}+4.1{-1,2}
y =
  7{1}-2.1{2}-6{-1,2}+9.6{1,2}

2x + 3y =
  25{1}+6.1{2}-9.8{-1,2}+28.8{1,2}
x to the power 5 =
  15527{1}+23433{2}-12049.1{-1,1}+19382.8{-1,2}
y to the outer power 3 =
  0
even part of xy = 
  -23.62-39.36{-1,1}-47.6{1,2}

matrix_multi<double>
x = 
  2{1}+6.2{2}+4.1{-1,2}
y =
  7{1}-2.1{2}-6{-1,2}+9.6{1,2}

2x + 3y =
  25{1}+6.1{2}-9.8{-1,2}+28.8{1,2}
x to the power 5 =
  15527{1}+23433{2}-12049.1{-1,1}+19382.8{-1,2}
y to the outer power 3 =
  0
even part of xy = 
  -23.62-39.36{-1,1}-47.6{1,2}


Test 04:
Programming example 4 : Rotations and electromagnetic fields

Demonstration calculations from P. Lounesto,
''Clifford algebra calculations with a microcomputer'' in
A. Micali, R. Boudet, J. Helmstetter, (eds),
Clifford algebras and their applications in mathematical physics
Kluwer, 1992, pp44-46.
See also: P. Lounesto, et. al., Clical demo
http://users.tkk.fi/~ppuska/mirror/Lounesto/CLICAL.htm

framed_multi<double>
Rotations in three dimensions
x =
  2{1}+3{2}+5{3}
a =
  {1}-3{2}+4{3}
A =
  4{1,2}+3{1,3}+{2,3}
s = exp(A/2) =
  -0.82978+0.437802{1,2}+0.328352{1,3}+0.109451{2,3}
Rotation about the axis a
y = s*x/s =
  -3.83867{1}+0.741734{2}+4.76597{3}
y*y =
  38
x*x =
  38

Lorentz transformations of space-time
x =
  2{-1}+2{1}+3{2}+5{3}
A =
  -3{-1,1}-{-1,2}+4{1,2}-2{-1,3}+3{1,3}+{2,3}
s = exp(A/2) =
  -0.642148-0.457031{-1,1}-0.946088{-1,2}+1.40312{1,2}+0.489056{-1,3}+0.457031{1,3}+0.946088{2,3}-1.06861{-1,1,2,3}
y = s*x/involute(s) =
  -15.7362{-1}+7.35115{1}-13.6466{2}+6.43102{3}
y*y =
  34
x*x =
  34
F =
  -2{-1,1}-{-1,2}+5{1,2}-2{-1,3}+{1,3}+7{2,3}
G = s*F/s =
  -29.5319{-1,1}-24.8643{-1,2}+39.1467{1,2}-8.42419{-1,3}+0.809417{1,3}-9.70657{2,3}
G*G =
  -66-46{-1,1,2,3}
F*F =
  -66-46{-1,1,2,3}
-F*q1*F / 2 =
  42{-1}-7{1}-4{2}+9{3}

Electromagnetism in Cl_3
Let F = E - jB be the electromagnetic field, where the electric component
E = {1}+2{2}+4{3}, the magnetic component B = 3{1}+5{2}+7{3}.
j ={1,2,3} is the unit director of R_3.
Compute the Lorentz invariants, energy density and Poynting vector of F.
E =
  {1}+2{2}+4{3}
B =
  3{1}+5{2}+7{3}
Electromagnetic field: F = E - j*B =
  {1}+2{2}+4{3}-7{1,2}+5{1,3}-3{2,3}
Lorentz invariants: F*F / 2.0 =
  -31-41{1,2,3}
Energy density and Poynting vector: -involute(F)*F / 2.0 =
  52-6{1}+5{2}-{3}
Boost at half the velocity of light
v =
  0.5{1}
A =
  0.549306{1}
s = exp(A / 2.0) =
  1.03795+0.278119{1}
Electric field: G = s * F / s =
  {1}-1.73205{2}+7.50555{3}-6.9282{1,2}+8.0829{1,3}-3{2,3}
Magnetic induction:
  3{1}+8.0829{2}+6.9282{3}
x =
  10+{1}+{2}
y = s * x / involute(s) =
  12.1244+6.9282{1}+{2}
y * conj(y) =
  98
x * conj(x) = 
  98

Electromagnetism in Cl_{3,1}
i =
  -{-1,1,2,3}
E =
  -{-1,1}-2{-1,2}-4{-1,3}
B =
  -3{-1,1}-5{-1,2}-7{-1,3}
F = E - i*B =
  -{-1,1}-2{-1,2}-7{1,2}-4{-1,3}+5{1,3}-3{2,3}
Lorentz invariants: F*F / 2.0 =
  -31+41{-1,1,2,3}
Energy density and Poynting vector: -F * q1 * F / 2.0 =
  52{-1}-6{1}+5{2}-{3}

matrix_multi<double>
Rotations in three dimensions
x =
  2{1}+3{2}+5{3}
a =
  {1}-3{2}+4{3}
A =
  4{1,2}+3{1,3}+{2,3}
s = exp(A/2) =
  -0.82978+0.437802{1,2}+0.328352{1,3}+0.109451{2,3}
Rotation about the axis a
y = s*x/s =
  -3.83867{1}+0.741734{2}+4.76597{3}
y*y =
  38
x*x =
  38

Lorentz transformations of space-time
x =
  2{-1}+2{1}+3{2}+5{3}
A =
  -3{-1,1}-{-1,2}+4{1,2}-2{-1,3}+3{1,3}+{2,3}
s = exp(A/2) =
  -0.642148-0.457031{-1,1}-0.946088{-1,2}+1.40312{1,2}+0.489056{-1,3}+0.457031{1,3}+0.946088{2,3}-1.06861{-1,1,2,3}
y = s*x/involute(s) =
  -15.7362{-1}+7.35115{1}-13.6466{2}+6.43102{3}
y*y =
  34
x*x =
  34
F =
  -2{-1,1}-{-1,2}+5{1,2}-2{-1,3}+{1,3}+7{2,3}
G = s*F/s =
  -29.5319{-1,1}-24.8643{-1,2}+39.1467{1,2}-8.42419{-1,3}+0.809417{1,3}-9.70657{2,3}
G*G =
  -66-46{-1,1,2,3}
F*F =
  -66-46{-1,1,2,3}
-F*q1*F / 2 =
  42{-1}-7{1}-4{2}+9{3}

Electromagnetism in Cl_3
Let F = E - jB be the electromagnetic field, where the electric component
E = {1}+2{2}+4{3}, the magnetic component B = 3{1}+5{2}+7{3}.
j ={1,2,3} is the unit director of R_3.
Compute the Lorentz invariants, energy density and Poynting vector of F.
E =
  {1}+2{2}+4{3}
B =
  3{1}+5{2}+7{3}
Electromagnetic field: F = E - j*B =
  {1}+2{2}+4{3}-7{1,2}+5{1,3}-3{2,3}
Lorentz invariants: F*F / 2.0 =
  -31-41{1,2,3}
Energy density and Poynting vector: -involute(F)*F / 2.0 =
  52-6{1}+5{2}-{3}
Boost at half the velocity of light
v =
  0.5{1}
A =
  0.549306{1}
s = exp(A / 2.0) =
  1.03795+0.278119{1}
Electric field: G = s * F / s =
  {1}-1.73205{2}+7.50555{3}-6.9282{1,2}+8.0829{1,3}-3{2,3}
Magnetic induction:
  3{1}+8.0829{2}+6.9282{3}
x =
  10+{1}+{2}
y = s * x / involute(s) =
  12.1244+6.9282{1}+{2}
y * conj(y) =
  98
x * conj(x) = 
  98

Electromagnetism in Cl_{3,1}
i =
  -{-1,1,2,3}
E =
  -{-1,1}-2{-1,2}-4{-1,3}
B =
  -3{-1,1}-5{-1,2}-7{-1,3}
F = E - i*B =
  -{-1,1}-2{-1,2}-7{1,2}-4{-1,3}+5{1,3}-3{2,3}
Lorentz invariants: F*F / 2.0 =
  -31+41{-1,1,2,3}
Energy density and Poynting vector: -F * q1 * F / 2.0 =
  52{-1}-6{1}+5{2}-{3}


Test 05:
Programming example 5 : Octonions

In the Cayley algebra (=Cl(0,7)) compute the octonion product ab, where
a = 3 + e1 + 4e2 and b = 2 + 3e2 + 5e3.

framed_multi<double>
a = 
  3+4{-2}+{-1}
b = 
  2+5{-3}+3{-2}
octonion product of a and b = 
  -6+5{-7}+20{-5}+3{-4}+15{-3}+17{-2}+2{-1}

matrix_multi<double>
a = 
  3+4{-2}+{-1}
b = 
  2+5{-3}+3{-2}
octonion product of a and b = 
  -6+5{-7}+20{-5}+3{-4}+15{-3}+17{-2}+2{-1}


Test 06:
Programming example 6 : outer exponential

Compute the outer exponential of the bivector B = q1*q2 + q3*q4 + q5*q6

framed_multi<double>
B = 
  -{-6,-5}-{-4,-3}-{-2,-1}
outer exponential of B = 
  1-{-6,-5}-{-4,-3}-{-2,-1}+{-6,-5,-4,-3}+{-6,-5,-2,-1}+{-4,-3,-2,-1}-{-6,-5,-4,-3,-2,-1}

matrix_multi<double>
B = 
  -{-6,-5}-{-4,-3}-{-2,-1}
outer exponential of B = 
  1-{-6,-5}-{-4,-3}-{-2,-1}+{-6,-5,-4,-3}+{-6,-5,-2,-1}+{-4,-3,-2,-1}-{-6,-5,-4,-3,-2,-1}


Test 07:
Programming example 7 : Triality

framed_multi<double>
u*x*reverse(u) || u*y*reverse(u) =
  22.4582{1}-31.0057{2}-1.71947{3}+28.3592{4}-21.9314{5}-18.1889{6}-3.90549{7}

matrix_multi<double>
u*x*reverse(u) || u*y*reverse(u) =
  22.4582{1}-31.0057{2}-1.71947{3}+28.3592{4}-21.9314{5}-18.1889{6}-3.90549{7}


Test 08:
Programming example 8 : Reading multivectors from input

framed_multi<double>
Read:
  -23.62-39.36{-1,1}-47.6{1,2}
Read:
  12
Read:
  {-1}
Read:
  {2}+{2,3}+2{3,4}
matrix_multi<double>
Read:
  -23.62-39.36{-1,1}-47.6{1,2}
Read:
  12
Read:
  {-1}
Read:
  {2}+{2,3}+2{3,4}

Test 09:
Programming example 9 : vector_part

framed_multi<double>
a =
  3+2{-1}+3{4}+4{5}+2{1,3}+9{1,3,6}
a_frm = a.frame() = {-1,1,3,4,5,6}
a_frm.count() = 6
a_vec = a.vector_part() =
[-1] 2
[1] 0
[3] 0
[4] 3
[5] 4
[6] 0
a_vec.size() = 6
A = number(a_vec, a_frm) =
  2{-1}+3{4}+4{5}
a(1)
  2{-1}+3{4}+4{5}

matrix_multi<double>
a =
  3+2{-1}+3{4}+4{5}+2{1,3}+9{1,3,6}
a_frm = a.frame() = {-1,1,3,4,5,6}
a_frm.count() = 6
a_vec = a.vector_part() =
[-1] 2
[1] 0
[3] 0
[4] 3
[5] 4
[6] 0
a_vec.size() = 6
A = number(a_vec, a_frm) =
  2{-1}+3{4}+4{5}
a(1)
  2{-1}+3{4}+4{5}


Test 10:
Programming example 10 : Norms and involutions

framed_multi<double>
                     a=        1010101 {-3,-2}+10{-3,-1}+100{-2,-1}+1000{-3,-2,-1}
           involute(a)=        1010101 {-3,-2}+10{-3,-1}+100{-2,-1}-1000{-3,-2,-1}
           reverse(a)=         1010101 -{-3,-2}-10{-3,-1}-100{-2,-1}-1000{-3,-2,-1}
               conj(a)=        1010101 -{-3,-2}-10{-3,-1}-100{-2,-1}+1000{-3,-2,-1}
                     b=           8548 41{-3,-2}+43{-3,-1}+47{-2,-1}+53{-3,-2,-1}
           involute(b)=           8548 41{-3,-2}+43{-3,-1}+47{-2,-1}-53{-3,-2,-1}
           reverse(b)=            8548 -41{-3,-2}-43{-3,-1}-47{-2,-1}-53{-3,-2,-1}
               conj(b)=           8548 -41{-3,-2}-43{-3,-1}-47{-2,-1}+53{-3,-2,-1}
        norm(a)norm(b)=     8634343348
(pn(ab)+pn(reverse(a)b))/2=     8634343348
                    ab=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
involute(a)involute(b)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
  reverse(b)reverse(a)=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
        conj(b)conj(a)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
                    ba=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
involute(b)involute(a)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
  reverse(a)reverse(b)=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
        conj(a)conj(b)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
              conj(a)b=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
 reverse(a)involute(b)=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
              conj(b)a=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
 reverse(b)involute(a)=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
 involute(a)reverse(b)=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
             a*conj(b)=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
 involute(b)reverse(a)=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
             b*conj(a)=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
          involute(a)b=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
         a*involute(b)=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
     conj(b)reverse(a)=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
     reverse(b)conj(a)=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
          involute(b)a=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
         b*involute(a)=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
     conj(a)reverse(b)=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
     reverse(a)conj(b)=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
          reverse(a)b=      8634343348 -47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
    conj(a)involute(b)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
          reverse(b)a=      8634343348 -47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
    conj(b)involute(a)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
          a*reverse(b)=     8634343348 -47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
    involute(a)conj(b)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
          b*reverse(a)=     8634343348 -47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
    involute(b)conj(a)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
matrix_multi<double>
                     a=        1010101 {-3,-2}+10{-3,-1}+100{-2,-1}+1000{-3,-2,-1}
           involute(a)=        1010101 {-3,-2}+10{-3,-1}+100{-2,-1}-1000{-3,-2,-1}
           reverse(a)=         1010101 -{-3,-2}-10{-3,-1}-100{-2,-1}-1000{-3,-2,-1}
               conj(a)=        1010101 -{-3,-2}-10{-3,-1}-100{-2,-1}+1000{-3,-2,-1}
                     b=           8548 41{-3,-2}+43{-3,-1}+47{-2,-1}+53{-3,-2,-1}
           involute(b)=           8548 41{-3,-2}+43{-3,-1}+47{-2,-1}-53{-3,-2,-1}
           reverse(b)=            8548 -41{-3,-2}-43{-3,-1}-47{-2,-1}-53{-3,-2,-1}
               conj(b)=           8548 -41{-3,-2}-43{-3,-1}-47{-2,-1}+53{-3,-2,-1}
        norm(a)norm(b)=     8634343348
(pn(ab)+pn(reverse(a)b))/2=     8634343348
                    ab=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
involute(a)involute(b)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
  reverse(b)reverse(a)=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
        conj(b)conj(a)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
                    ba=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
involute(b)involute(a)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
  reverse(a)reverse(b)=     8634343348 47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
        conj(a)conj(b)=     8634343348 47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
              conj(a)b=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
 reverse(a)involute(b)=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
              conj(b)a=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
 reverse(b)involute(a)=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
 involute(a)reverse(b)=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
             a*conj(b)=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
 involute(b)reverse(a)=     8634343348 58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
             b*conj(a)=     8634343348 58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
          involute(a)b=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
         a*involute(b)=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
     conj(b)reverse(a)=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
     reverse(b)conj(a)=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
          involute(b)a=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
         b*involute(a)=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
     conj(a)reverse(b)=     8634343348 -58171+41700{-3}-42470{-2}+40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
     reverse(a)conj(b)=     8634343348 -58171-41700{-3}+42470{-2}-40947{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
          reverse(a)b=      8634343348 -47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
    conj(a)involute(b)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
          reverse(b)a=      8634343348 -47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
    conj(b)involute(a)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
          a*reverse(b)=     8634343348 -47829+52300{-3}-43530{-2}+41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
    involute(a)conj(b)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}+3830{-3,-2}-4053{-3,-1}+367{-2,-1}
          b*reverse(a)=     8634343348 -47829+52300{-3}-43530{-2}+41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}
    involute(b)conj(a)=     8634343348 -47829-52300{-3}+43530{-2}-41053{-1}-3830{-3,-2}+4053{-3,-1}-367{-2,-1}

Test 11:
Programming example 11 : Square root and transcendental functions

framed_multi<float>
Epsilon ==1.19209e-07
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159

A
  3.14159{1,2,3}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 2.0431e-05
lhs == 0.0432148
rhs == 0.0432139

A
  -3.14159{1,2,3}

A
  3.14159{-1,1,2,3,4}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 2.0431e-05
lhs == 0.0432148
rhs == 0.0432139

A
  -3.14159{-1,1,2,3,4}

A
  3.14159{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 2.0431e-05
lhs == 0.0432148
rhs == 0.0432139

A
  -3.14159{-2,-1,1,2,3,4,5}

A
  31.4159{-2,-1,1,2,3,4,5}

A
  -31.4159{-2,-1,1,2,3,4,5}

A
  3.14159{1,2}

A
  1.5708{-1}

A
  -1.5708{-1}

A
  314.159{-1}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
lhs == nan
Test failed: cos(A)*tan(A) != sin(A)
lhs == nan
Test failed: tan(atan(A)) != A
Relative norm of difference == 1.488e-05
lhs == -0.00431419+314.161{-1}
rhs == 314.159{-1}

A
  -314.159{-1}
Test failed: cos(A)*tan(A) != sin(A)
lhs == nan
Test failed: tan(atan(A)) != A
Relative norm of difference == 1.8854e-05
lhs == 0.00431403-314.155{-1}
rhs == -314.159{-1}
Test failed: tanh(atanh(A)) != A
Relative norm of difference == 1.1657e-05
lhs == -314.163{-1}
rhs == -314.159{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

matrix_multi<float>
Epsilon ==1.19209e-07
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159

A
  3.14159{1,2,3}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 2.0431e-05
lhs == 0.0432148
rhs == 0.0432139

A
  -3.14159{1,2,3}

A
  3.14159{-1,1,2,3,4}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 2.0431e-05
lhs == 0.0432148
rhs == 0.0432139

A
  -3.14159{-1,1,2,3,4}

A
  3.14159{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 2.0431e-05
lhs == 0.0432148
rhs == 0.0432139

A
  -3.14159{-2,-1,1,2,3,4,5}

A
  31.4159{-2,-1,1,2,3,4,5}

A
  -31.4159{-2,-1,1,2,3,4,5}

A
  3.14159{1,2}

A
  1.5708{-1}

A
  -1.5708{-1}

A
  314.159{-1}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
lhs == nan
Test failed: tan(atan(A)) != A
Relative norm of difference == 1.488e-05
lhs == -0.00431415+314.161{-1}
rhs == 314.159{-1}

A
  -314.159{-1}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
lhs == nan
Test failed: tan(atan(A)) != A
Relative norm of difference == 1.8854e-05
lhs == 0.00431399-314.155{-1}
rhs == -314.159{-1}
Test failed: tanh(atanh(A)) != A
Relative norm of difference == 1.1657e-05
lhs == -314.163{-1}
rhs == -314.159{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

framed_multi<double>
Epsilon ==2.22045e-16
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159265358979

A
  3.14159265358979{1,2,3}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.0143e-14
lhs == 0.0432139182637705
rhs == 0.0432139182637723

A
  -3.14159265358979{1,2,3}

A
  3.14159265358979{-1,1,2,3,4}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.0143e-14
lhs == 0.0432139182637705
rhs == 0.0432139182637723

A
  -3.14159265358979{-1,1,2,3,4}

A
  3.14159265358979{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.0143e-14
lhs == 0.0432139182637705
rhs == 0.0432139182637723

A
  -3.14159265358979{-2,-1,1,2,3,4,5}

A
  31.4159265358979{-2,-1,1,2,3,4,5}

A
  -31.4159265358979{-2,-1,1,2,3,4,5}

A
  3.14159265358979{1,2}

A
  1.5707963267949{-1}

A
  -1.5707963267949{-1}

A
  314.159265358979{-1}

A
  -314.159265358979{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

matrix_multi<double>
Epsilon ==2.22045e-16
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159265358979

A
  3.14159265358979{1,2,3}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.0143e-14
lhs == 0.0432139182637705
rhs == 0.0432139182637723

A
  -3.14159265358979{1,2,3}

A
  3.14159265358979{-1,1,2,3,4}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.0143e-14
lhs == 0.0432139182637705
rhs == 0.0432139182637723

A
  -3.14159265358979{-1,1,2,3,4}

A
  3.14159265358979{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.0143e-14
lhs == 0.0432139182637705
rhs == 0.0432139182637723

A
  -3.14159265358979{-2,-1,1,2,3,4,5}

A
  31.4159265358979{-2,-1,1,2,3,4,5}

A
  -31.4159265358979{-2,-1,1,2,3,4,5}

A
  3.14159265358979{1,2}

A
  1.5707963267949{-1}

A
  -1.5707963267949{-1}

A
  314.159265358979{-1}

A
  -314.159265358979{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

framed_multi<long double>
Epsilon ==1.0842e-19
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159265358979324

A
  3.14159265358979324{1,2,3}

A
  -3.14159265358979324{1,2,3}

A
  3.14159265358979324{-1,1,2,3,4}

A
  -3.14159265358979324{-1,1,2,3,4}

A
  3.14159265358979324{-2,-1,1,2,3,4,5}

A
  -3.14159265358979324{-2,-1,1,2,3,4,5}

A
  31.4159265358979324{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Absolute norm of difference == 2.2711e-14
lhs == 0
rhs == 2.27110106832409384e-14

A
  -31.4159265358979324{-2,-1,1,2,3,4,5}

A
  3.14159265358979324{1,2}

A
  1.57079632679489662{-1}

A
  -1.57079632679489662{-1}

A
  314.159265358979324{-1}

A
  -314.159265358979324{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

matrix_multi<long double>
Epsilon ==1.0842e-19
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159265358979324

A
  3.14159265358979324{1,2,3}

A
  -3.14159265358979324{1,2,3}

A
  3.14159265358979324{-1,1,2,3,4}

A
  -3.14159265358979324{-1,1,2,3,4}

A
  3.14159265358979324{-2,-1,1,2,3,4,5}

A
  -3.14159265358979324{-2,-1,1,2,3,4,5}

A
  31.4159265358979324{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Absolute norm of difference == 2.2711e-14
lhs == 0
rhs == 2.27110106832409384e-14

A
  -31.4159265358979324{-2,-1,1,2,3,4,5}

A
  3.14159265358979324{1,2}

A
  1.57079632679489662{-1}

A
  -1.57079632679489662{-1}

A
  314.159265358979324{-1}

A
  -314.159265358979324{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

framed_multi<dd_real>
Epsilon ==4.93038e-32
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.1415926535897932384626433832795e+00

A
  3.1415926535897932384626433832795e+00{1,2,3}

A
  -3.1415926535897932384626433832795e+00{1,2,3}

A
  3.1415926535897932384626433832795e+00{-1,1,2,3,4}

A
  -3.1415926535897932384626433832795e+00{-1,1,2,3,4}

A
  3.1415926535897932384626433832795e+00{-2,-1,1,2,3,4,5}

A
  -3.1415926535897932384626433832795e+00{-2,-1,1,2,3,4,5}

A
  3.1415926535897932384626433832795e+01{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.81518e-07
lhs == 2.271099974748835848004091531038e-14
rhs == 2.2711010683240938386792752390932e-14

A
  -3.1415926535897932384626433832795e+01{-2,-1,1,2,3,4,5}

A
  3.1415926535897932384626433832795e+00{1,2}

A
  1.5707963267948966192313216916398e+00{-1}

A
  -1.5707963267948966192313216916398e+00{-1}

A
  3.1415926535897932384626433832795e+02{-1}

A
  -3.1415926535897932384626433832795e+02{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

matrix_multi<dd_real>
Epsilon ==4.93038e-32
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.1415926535897932384626433832795e+00

A
  3.1415926535897932384626433832795e+00{1,2,3}

A
  -3.1415926535897932384626433832795e+00{1,2,3}

A
  3.1415926535897932384626433832795e+00{-1,1,2,3,4}

A
  -3.1415926535897932384626433832795e+00{-1,1,2,3,4}

A
  3.1415926535897932384626433832795e+00{-2,-1,1,2,3,4,5}

A
  -3.1415926535897932384626433832795e+00{-2,-1,1,2,3,4,5}

A
  3.1415926535897932384626433832795e+01{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 4.81518e-07
lhs == 2.271099974748835848004091531038e-14
rhs == 2.2711010683240938386792752390932e-14

A
  -3.1415926535897932384626433832795e+01{-2,-1,1,2,3,4,5}

A
  3.1415926535897932384626433832795e+00{1,2}

A
  1.5707963267948966192313216916398e+00{-1}

A
  -1.5707963267948966192313216916398e+00{-1}

A
  3.1415926535897932384626433832795e+02{-1}

A
  -3.1415926535897932384626433832795e+02{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

framed_multi<qd_real>
Epsilon ==1.21543e-63
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{1,2,3}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+00{1,2,3}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{-1,1,2,3,4}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+00{-1,1,2,3,4}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{-2,-1,1,2,3,4,5}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+00{-2,-1,1,2,3,4,5}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+01{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 8.03612e-39
lhs == 2.27110106832409383867927523909354754447274572008972793969216094e-14
rhs == 2.27110106832409383867927523909354754449099655455022911741121068e-14

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+01{-2,-1,1,2,3,4,5}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{1,2}

A
  1.57079632679489661923132169163975144209858469968755291048747230e+00{-1}
Test failed: cosh(A)*tanh(A) != sinh(A)
lhs == nan

A
  -1.57079632679489661923132169163975144209858469968755291048747230e+00{-1}
Test failed: cosh(A)*tanh(A) != sinh(A)
lhs == nan

A
  3.14159265358979323846264338327950288419716939937510582097494459e+02{-1}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+02{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

matrix_multi<qd_real>
Epsilon ==1.21543e-63
A
  0

A
  1

A
  -1

A
  2

A
  -2

A
  0.5

A
  -0.5

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{1,2,3}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+00{1,2,3}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{-1,1,2,3,4}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+00{-1,1,2,3,4}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{-2,-1,1,2,3,4,5}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+00{-2,-1,1,2,3,4,5}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+01{-2,-1,1,2,3,4,5}
Test failed: cos(A)+complexifier(A)*sin(A) != exp(complexifier(A)*A)
Relative norm of difference == 8.03612e-39
lhs == 2.27110106832409383867927523909354754447274572008972793969216094e-14
rhs == 2.27110106832409383867927523909354754449099655455022911741121068e-14

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+01{-2,-1,1,2,3,4,5}

A
  3.14159265358979323846264338327950288419716939937510582097494459e+00{1,2}

A
  1.57079632679489661923132169163975144209858469968755291048747230e+00{-1}
Test failed: cosh(A)*tanh(A) != sinh(A)
lhs == nan

A
  -1.57079632679489661923132169163975144209858469968755291048747230e+00{-1}
Test failed: cosh(A)*tanh(A) != sinh(A)
lhs == nan

A
  3.14159265358979323846264338327950288419716939937510582097494459e+02{-1}

A
  -3.14159265358979323846264338327950288419716939937510582097494459e+02{-1}

A
  {1}

A
  -{1}

A
  {-1,1}

A
  -{-1,1}

A
  {-2,-1,1,2}

A
  -{-2,-1,1,2}

A
  {-1}+{1}

Random A in {}

Random A in {}

Random A in {1}

Random A in {1}

Random A in {-1,1}

Random A in {-1,1}

Random A in {1,2}

Random A in {1,2}

Random A in {-1,1,2}

Random A in {-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-2,-1,1,2}

Random A in {-1,1,2,3}

Random A in {-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}

Random A in {-3,-2,-1,1,2,3}


Test 12:
Programming example 12 : Frame group multiplication tables

framed_multi<float,-2,2>
{-2}, {-1}
1        {-2}        {-1}        {-2,-1}        -1        -{-2}        -{-1}        -{-2,-1}        
{-2}        -1        {-2,-1}        -{-1}        -{-2}        1        -{-2,-1}        {-1}        
{-1}        -{-2,-1}        -1        {-2}        -{-1}        {-2,-1}        1        -{-2}        
{-2,-1}        {-1}        -{-2}        -1        -{-2,-1}        -{-1}        {-2}        1        
-1        -{-2}        -{-1}        -{-2,-1}        1        {-2}        {-1}        {-2,-1}        
-{-2}        1        -{-2,-1}        {-1}        {-2}        -1        {-2,-1}        -{-1}        
-{-1}        {-2,-1}        1        -{-2}        {-1}        -{-2,-1}        -1        {-2}        
-{-2,-1}        -{-1}        {-2}        1        {-2,-1}        {-1}        -{-2}        -1        

{-1}, {1}
1        {-1}        {1}        {-1,1}        -1        -{-1}        -{1}        -{-1,1}        
{-1}        -1        {-1,1}        -{1}        -{-1}        1        -{-1,1}        {1}        
{1}        -{-1,1}        1        -{-1}        -{1}        {-1,1}        -1        {-1}        
{-1,1}        {1}        {-1}        1        -{-1,1}        -{1}        -{-1}        -1        
-1        -{-1}        -{1}        -{-1,1}        1        {-1}        {1}        {-1,1}        
-{-1}        1        -{-1,1}        {1}        {-1}        -1        {-1,1}        -{1}        
-{1}        {-1,1}        -1        {-1}        {1}        -{-1,1}        1        -{-1}        
-{-1,1}        -{1}        -{-1}        -1        {-1,1}        {1}        {-1}        1        

{1}, {2}
1        {1}        {2}        {1,2}        -1        -{1}        -{2}        -{1,2}        
{1}        1        {1,2}        {2}        -{1}        -1        -{1,2}        -{2}        
{2}        -{1,2}        1        -{1}        -{2}        {1,2}        -1        {1}        
{1,2}        -{2}        {1}        -1        -{1,2}        {2}        -{1}        1        
-1        -{1}        -{2}        -{1,2}        1        {1}        {2}        {1,2}        
-{1}        -1        -{1,2}        -{2}        {1}        1        {1,2}        {2}        
-{2}        {1,2}        -1        {1}        {2}        -{1,2}        1        -{1}        
-{1,2}        {2}        -{1}        1        {1,2}        -{2}        {1}        -1        
matrix_multi<float,-2,2>
{-2}, {-1}
1        {-2}        {-1}        {-2,-1}        -1        -{-2}        -{-1}        -{-2,-1}        
{-2}        -1        {-2,-1}        -{-1}        -{-2}        1        -{-2,-1}        {-1}        
{-1}        -{-2,-1}        -1        {-2}        -{-1}        {-2,-1}        1        -{-2}        
{-2,-1}        {-1}        -{-2}        -1        -{-2,-1}        -{-1}        {-2}        1        
-1        -{-2}        -{-1}        -{-2,-1}        1        {-2}        {-1}        {-2,-1}        
-{-2}        1        -{-2,-1}        {-1}        {-2}        -1        {-2,-1}        -{-1}        
-{-1}        {-2,-1}        1        -{-2}        {-1}        -{-2,-1}        -1        {-2}        
-{-2,-1}        -{-1}        {-2}        1        {-2,-1}        {-1}        -{-2}        -1        

{-1}, {1}
1        {-1}        {1}        {-1,1}        -1        -{-1}        -{1}        -{-1,1}        
{-1}        -1        {-1,1}        -{1}        -{-1}        1        -{-1,1}        {1}        
{1}        -{-1,1}        1        -{-1}        -{1}        {-1,1}        -1        {-1}        
{-1,1}        {1}        {-1}        1        -{-1,1}        -{1}        -{-1}        -1        
-1        -{-1}        -{1}        -{-1,1}        1        {-1}        {1}        {-1,1}        
-{-1}        1        -{-1,1}        {1}        {-1}        -1        {-1,1}        -{1}        
-{1}        {-1,1}        -1        {-1}        {1}        -{-1,1}        1        -{-1}        
-{-1,1}        -{1}        -{-1}        -1        {-1,1}        {1}        {-1}        1        

{1}, {2}
1        {1}        {2}        {1,2}        -1        -{1}        -{2}        -{1,2}        
{1}        1        {1,2}        {2}        -{1}        -1        -{1,2}        -{2}        
{2}        -{1,2}        1        -{1}        -{2}        {1,2}        -1        {1}        
{1,2}        -{2}        {1}        -1        -{1,2}        {2}        -{1}        1        
-1        -{1}        -{2}        -{1,2}        1        {1}        {2}        {1,2}        
-{1}        -1        -{1,2}        -{2}        {1}        1        {1,2}        {2}        
-{2}        {1,2}        -1        {1}        {2}        -{1,2}        1        -{1}        
-{1,2}        {2}        -{1}        1        {1,2}        -{2}        {1}        -1        

Test 13:
Programming example 13 : Multiplication and division
a: 
{-3}+{-2}+{-1}
A = cm(a): 
{-3}+{-2}+{-1}
b: 
1e+08{3}
B = cm(b): 
1e+08{3}
a*b: 
1e+08{-3,3}+1e+08{-2,3}+1e+08{-1,3}
A*B: 
1e+08{-3,3}+1e+08{-2,3}+1e+08{-1,3}
B/B: 
1
(B/B)*B: 
1e+08{3}
(A*B)/(A*B): 
1
inv(A): 
-0.333333{-3}-0.333333{-2}-0.333333{-1}
(b/b).truncated(): 
1
((b/b)*b).truncated(): 
{-2}+{2}+100000000{3}
((a*b)/(a*b)).truncated(): 
1
inv(a).truncated(): 
-0.333333333{-3}-0.333333333{-2}-0.333333333{-1}

Test 14:
Programming example 14 : framed_multi <-> matrix_multi
a =
  {-3}+{-2}+{-1}
A =
  {-3}+{-2}+{-1}
b =
  10000{-1}
B =
  10000{-1}
B.truncated()
  10000{-1}
B - b =
  0
b - B =
  0
c = (a * b) / b =
  {-3}+{-2}+{-1}
C = c =
  {-3}+{-2}+{-1}
C - c =
  0
c - C =
  0
star(a, b)    = -10000
scalar(a * b) = -10000
star(b, a)    = -10000
scalar(b * a) = -10000
star(A, B)    = -10000
scalar(A * B) = -10000
star(B, A)    = -10000
scalar(B * A) = -10000
d == 2.0; d == 2.0; 2.0 == d
d != 4.0; d != 4.0; 4.0 != d
D == 2.0; D == 2.0; 2.0 == D
D != 4.0; D != 4.0; 4.0 != D

Test 15:
Programming example 15 : Subscripts and parts
a: {-3}+{-2}+{-1}+2{1,2,3}
A: {-3}+{-2}+{-1}+2{1,2,3}
b: 1e+08{-1}
B: 1e+08{-1}
c = a*b: -1e+08+1e+08{-3,-1}+1e+08{-2,-1}-2e+08{-1,1,2,3}
C = A*B: -1e+08+1e+08{-3,-1}+1e+08{-2,-1}-2e+08{-1,1,2,3}
c[{-3}]: 1
C[{-3}]: 1
c[{-2}]: 1
C[{-2}]: 1
c[{-1}]: 1
C[{-1}]: 1
c[{0}]: -1e+08
C[{0}]: -1e+08
c[{1}]: 0
C[{1}]: 0
c[{2}]: 0
C[{2}]: 0
c[{3}]: 0
C[{3}]: 0
c(0): -1e+08
C(0): -1e+08
c(1): {-3}+{-2}+{-1}
C(1): {-3}+{-2}+{-1}
c(2): 1e+08{-3,-1}+1e+08{-2,-1}
C(2): 1e+08{-3,-1}+1e+08{-2,-1}
c(3): 2{1,2,3}
C(3): 2{1,2,3}
c(4): -2e+08{-1,1,2,3}
C(4): -2e+08{-1,1,2,3}
c(5): 0
C(5): 0
even(c): -1e+08+1e+08{-3,-1}+1e+08{-2,-1}-2e+08{-1,1,2,3}
scalar(c): -1e+08
pure(c): 1e+08{-3,-1}+1e+08{-2,-1}-2e+08{-1,1,2,3}
real(c): -1e+08
imag(c): 0

Test 16:
Programming example 16 : Matrices of multivectors

framed_multi<double,-3,3>
[5,5]((0,0,0,0,0),(0,1,0,0,0),(0,0,0,0,0),(0,0,0,0,0),(0,0,0,0,0))
[5,5](({1},0,0,0,0),(0,{2},0,0,0),(0,0,{3},0,0),(0,0,0,{1},0),(0,0,0,0,{2}))
[5,5]((0,0,0,0,0),(0,{2},0,0,0),(0,0,0,0,0),(0,0,0,0,0),(0,0,0,0,0))
[5,5](({1},0,0,0,0),(0,2{2},0,0,0),(0,0,{3},0,0),(0,0,0,{1},0),(0,0,0,0,{2}))
matrix_multi<double,-3,3>
[5,5]((0,0,0,0,0),(0,1,0,0,0),(0,0,0,0,0),(0,0,0,0,0),(0,0,0,0,0))
[5,5](({1},0,0,0,0),(0,{2},0,0,0),(0,0,{3},0,0),(0,0,0,{1},0),(0,0,0,0,{2}))
[5,5]((0,0,0,0,0),(0,{2},0,0,0),(0,0,0,0,0),(0,0,0,0,0),(0,0,0,0,0))
[5,5](({1},0,0,0,0),(0,2{2},0,0,0),(0,0,{3},0,0),(0,0,0,{1},0),(0,0,0,0,{2}))

Test 17:
Programming example 17 : Truncation and printing
float:
7 digit precision
a: 
{-3}+{-2}+{-1}
A = cm(a): 
{-3}+{-2}+{-1}
b: 
{-2}+{2}+10000{3}
B = cm(b): 
{-2}+{2}+10000{3}
Fixed format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0.0001000{1}+{2}+10000.0000000{3}
B: 
{-2}+{2}+10000.0000000{3}
Scientific format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+{2}+1.0000000e+04{3}
B: 
{-2}+{2}+1.0000000e+04{3}
Hexadecimal floating point format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+{2}+0x1.388p+13{3}
B: 
{-2}+{2}+0x1.388p+13{3}
Default floating point format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+{2}+10000{3}
B: 
{-2}+{2}+10000{3}
Default truncation
Fixed format
truncation: 0.0000001
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0.0000001
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0.0000001
b.truncated(truncation): 
{-2}+{2}+10000.0000000{3}
truncation: 0.0000001
B.truncated(truncation): 
{-2}+{2}+10000.0000000{3}
Scientific format
truncation: 1.1920929e-07
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.1920929e-07
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.1920929e-07
b.truncated(truncation): 
{-2}+{2}+1.0000000e+04{3}
truncation: 1.1920929e-07
B.truncated(truncation): 
{-2}+{2}+1.0000000e+04{3}
Hexadecimal floating point format
truncation: 0x1p-23
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0x1p-23
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0x1p-23
b.truncated(truncation): 
{-2}+{2}+0x1.388p+13{3}
truncation: 0x1p-23
B.truncated(truncation): 
{-2}+{2}+0x1.388p+13{3}
Default floating point format
truncation: 1.192093e-07
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.192093e-07
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.192093e-07
b.truncated(truncation): 
{-2}+{2}+10000{3}
truncation: 1.192093e-07
B.truncated(truncation): 
{-2}+{2}+10000{3}
double:
14 digit precision
a: 
{-3}+{-2}+{-1}
A = cm(a): 
{-3}+{-2}+{-1}
b: 
{-2}+0.0001{1}+{2}+10000{3}
B = cm(b): 
{-2}+0.0001{1}+{2}+10000{3}
Fixed format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0.00010000000000{1}+{2}+10000.00000000000000{3}
B: 
{-2}+0.00010000000000{1}+{2}+10000.00000000000000{3}
Scientific format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+1.00000000000000e-04{1}+{2}+1.00000000000000e+04{3}
B: 
{-2}+1.00000000000000e-04{1}+{2}+1.00000000000000e+04{3}
Hexadecimal floating point format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0x1.a36e2eb1c432dp-14{1}+{2}+0x1.388p+13{3}
B: 
{-2}+0x1.a36e2eb1c432dp-14{1}+{2}+0x1.388p+13{3}
Default floating point format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0.0001{1}+{2}+10000{3}
B: 
{-2}+0.0001{1}+{2}+10000{3}
Default truncation
Fixed format
truncation: 0.00000000000000
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0.00000000000000
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0.00000000000000
b.truncated(truncation): 
{-2}+0.00010000000000{1}+{2}+10000.00000000000000{3}
truncation: 0.00000000000000
B.truncated(truncation): 
{-2}+0.00010000000000{1}+{2}+10000.00000000000000{3}
Scientific format
truncation: 2.22044604925031e-16
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 2.22044604925031e-16
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 2.22044604925031e-16
b.truncated(truncation): 
{-2}+1.00000000000000e-04{1}+{2}+1.00000000000000e+04{3}
truncation: 2.22044604925031e-16
B.truncated(truncation): 
{-2}+9.99999999999890e-05{1}+{2}+1.00000000000000e+04{3}
Hexadecimal floating point format
truncation: 0x1p-52
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0x1p-52
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0x1p-52
b.truncated(truncation): 
{-2}+0x1.a36e2eb1c432dp-14{1}+{2}+0x1.388p+13{3}
truncation: 0x1p-52
B.truncated(truncation): 
{-2}+0x1.a36e2eb1c4p-14{1}+{2}+0x1.388p+13{3}
Default floating point format
truncation: 2.2204460492503e-16
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 2.2204460492503e-16
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 2.2204460492503e-16
b.truncated(truncation): 
{-2}+0.0001{1}+{2}+10000{3}
truncation: 2.2204460492503e-16
B.truncated(truncation): 
{-2}+9.9999999999989e-05{1}+{2}+10000{3}
long double:
17 digit precision
a: 
{-3}+{-2}+{-1}
A = cm(a): 
{-3}+{-2}+{-1}
b: 
{-2}+0.0001{1}+{2}+10000{3}
B = cm(b): 
{-2}+0.0001{1}+{2}+10000{3}
Fixed format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0.00010000000000000{1}+{2}+10000.00000000000000000{3}
B: 
{-2}+0.00010000000000000{1}+{2}+10000.00000000000000000{3}
Scientific format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+1.00000000000000005e-04{1}+{2}+1.00000000000000000e+04{3}
B: 
{-2}+1.00000000000000005e-04{1}+{2}+1.00000000000000000e+04{3}
Hexadecimal floating point format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0x1.a36e2eb1c432dp-14{1}+{2}+0x1.388p+13{3}
B: 
{-2}+0x1.a36e2eb1c432dp-14{1}+{2}+0x1.388p+13{3}
Default floating point format
a: 
{-3}+{-2}+{-1}
A: 
{-3}+{-2}+{-1}
b: 
{-2}+0.0001{1}+{2}+10000{3}
B: 
{-2}+0.0001{1}+{2}+10000{3}
Default truncation
Fixed format
truncation: 0.00000000000000000
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0.00000000000000000
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0.00000000000000000
b.truncated(truncation): 
{-2}+0.00010000000000000{1}+{2}+10000.00000000000000000{3}
truncation: 0.00000000000000000
B.truncated(truncation): 
{-2}+0.00010000000000000{1}+{2}+10000.00000000000000000{3}
Scientific format
truncation: 1.08420217248550443e-19
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.08420217248550443e-19
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.08420217248550443e-19
b.truncated(truncation): 
{-2}+1.00000000000000005e-04{1}+{2}+1.00000000000000000e+04{3}
truncation: 1.08420217248550443e-19
B.truncated(truncation): 
{-2}+1.00000000000000018e-04{1}+{2}+1.00000000000000000e+04{3}
Hexadecimal floating point format
truncation: 0x8p-66
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0x8p-66
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 0x8p-66
b.truncated(truncation): 
{-2}+0x1.a36e2eb1c432dp-14{1}+{2}+0x1.388p+13{3}
truncation: 0x8p-66
B.truncated(truncation): 
{-2}+0x1.a36e2eb1c432ep-14{1}+{2}+0x1.388p+13{3}
Default floating point format
truncation: 1.0842021724855044e-19
a.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.0842021724855044e-19
A.truncated(truncation): 
{-3}+{-2}+{-1}
truncation: 1.0842021724855044e-19
b.truncated(truncation): 
{-2}+0.0001{1}+{2}+10000{3}
truncation: 1.0842021724855044e-19
B.truncated(truncation): 
{-2}+0.00010000000000000002{1}+{2}+10000{3}
